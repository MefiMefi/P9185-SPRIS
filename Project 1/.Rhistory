knitr::opts_chunk$set(echo = TRUE)
source(knitr::purl("./data_manipulation.Rmd", quiet=TRUE))
source(knitr::purl("./EDA.Rmd", quiet=TRUE))
data.baseline <- data.comp %>% filter(day == 0)
library(table1)
data.baseline$gender = ifelse(data.baseline$gender == "M", "Male", "Female")
label(data.baseline$age) = "Age"
label(data.baseline$gender) = "Gender"
label(data.baseline$treatment_group) = "Treatment"
label(data.baseline$mem_comp) = "Baseline Composite Memory Score"
my.render.cont <- function(x) {
with(stats.default(x),
sprintf("%0.2f (%0.1f)", MEAN, SD))
}
tbl1 <- table1( ~ gender + age + mem_comp | treatment_group, data=data.baseline, render.continuous=my.render.cont) %>% t1kable(booktabs = TRUE, format = "latex") %>%  kable_styling(latex_options = c("hold_position", "scale_down"))
source(knitr::purl("./data_manipulation.Rmd", quiet=TRUE))
source(knitr::purl("./EDA.Rmd", quiet=TRUE))
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
source(knitr::purl("./data_manipulation.Rmd", quiet=TRUE))
source(knitr::purl("./EDA.Rmd", quiet=TRUE))
library(knitr)
library(kableExtra)
data.baseline <- data.comp %>% filter(day == 0)
library(table1)
data.baseline$gender = ifelse(data.baseline$gender == "M", "Male", "Female")
label(data.baseline$age) = "Age"
label(data.baseline$gender) = "Gender"
label(data.baseline$treatment_group) = "Treatment"
label(data.baseline$mem_comp) = "Baseline Composite Memory Score"
my.render.cont <- function(x) {
with(stats.default(x),
sprintf("%0.2f (%0.1f)", MEAN, SD))
}
tbl1 <- table1( ~ gender + age + mem_comp | treatment_group, data=data.baseline, render.continuous=my.render.cont) %>% t1kable(booktabs = TRUE, format = "latex") %>%  kable_styling(latex_options = c("hold_position", "scale_down"))
writeLines(as.character(tbl1), "tbl1.tex")
# centering age for better interpretation
data.full$age = data.full$age - mean(data.full$age)
data.comp$age = data.comp$age - mean(data.comp$age)
data.surv$age = data.surv$age - mean(data.surv$age)
library(gee)
library(geepack)
library(glmtoolbox)
library(gtsummary)
library(tidyverse)
data.comp.lag <-
data.comp %>%
group_by(subject_id) %>%
mutate(mem_comp_lag = lag(mem_comp), observed_lag = lag(observed)) %>%
ungroup() %>%
filter(observed_lag != 0) %>%
mutate(drop = ifelse(observed == 0 & observed_lag == 1, 1, 0)) %>%
dplyr::select(subject_id, day, day_fct, age, gender, treatment_group, mem_comp_lag, drop) %>%
mutate(day_fct = factor(day, levels = c(5,19,90)))
data.comp <-
data.comp %>%
group_by(subject_id) %>%
mutate(total_obs = sum(as.numeric(observed))) %>%
ungroup() %>%
mutate(type = as.factor(ifelse(total_obs == 4, "Completer", "Drop-out")))
model.complete.1 <- geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, data = data.comp %>% filter(type=="Completer"), family = gaussian, id = subject_id, corstr = "independence")
model.complete.2 <- geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, data = data.comp %>% filter(type=="Completer"), family = gaussian, id = subject_id,  corstr = "ar1")
model.complete.3 <- geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, data = data.comp %>% filter(type=="Completer"), family = gaussian, id = subject_id, corstr = "exchangeable")
model.complete.1.tbl <- tbl_regression(model.complete.1,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender",
`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "Beta")
)
model.complete.2.tbl <- tbl_regression(model.complete.2,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender",
`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "Beta")
)
model.complete.3.tbl <- tbl_regression(model.complete.3,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender",
`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "Beta")
)
model.complete.tbl <-
tbl_merge(list(model.complete.1.tbl, model.complete.2.tbl, model.complete.3.tbl), tab_spanner = c("Independent","AR-1","Exchangable")) %>% as_kable(booktabs = T, format = "latex",escape = FALSE) %>%  kable_styling(latex_options = c("hold_position")) %>% add_header_above(c(" ", "Independent" = 3, "AR-1" = 3, "Exchangable" = 3))
model.complete.tbl
writeLines(as.character(model.complete.tbl), "complete_case_gee.tex")
model.drop <-
geeglm(drop ~ day_fct + treatment_group + age + gender + mem_comp_lag, data = data.comp.lag, family = binomial, id = subject_id, corstr = "independence")
tbl_regression(model.drop, exponentiate = F)
library(lme4)
library(nlme)
library(lattice)
library(knitr)
library(kableExtra)
model.lmer = lmer(
mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct + (1 |subject_id), data = data.comp
)
tbl_regression(model.lmer)
# propensity score models, using logistic regression and coxph model
model.prob.drop <-
geeglm(dropped ~ day_fct + treatment_group + age + gender, data = data.surv %>% mutate(day_fct = factor(day_fct,levels = c(5,19,90))), family = binomial, id = subject_id, corstr = "independence")
model.prob.drop.coxph <- coxph(Surv(start, stop, dropped) ~ treatment_group + age + gender, data = data.surv)
model.prob.drop.tbl <- tbl_regression(model.prob.drop, exponentiate = T,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "OR")
)  %>% as_kable(booktabs = T, format = "latex",escape = FALSE) %>%  kable_styling(latex_options = c("hold_position"))
writeLines(as.character(model.prob.drop.tbl), "ps_model.tex")
tbl_regression(model.prob.drop.coxph, exponentiate = F)
tbl_merge(
list(tbl_regression(model.prob.drop, exponentiate = F),tbl_regression(model.prob.drop.coxph, exponentiate = F))
)
predict.prob.drop <- predict(model.prob.drop, newdata = data.surv, type = "response")
predict.prob.drop.coxph <- predict(model.prob.drop.coxph, newdata = data.surv, type = "survival")
data.surv$prob.stay <- 1 - predict.prob.drop
data.surv$prob.stay.coxph <- predict.prob.drop.coxph
data.comp <- left_join(data.comp, data.surv %>% dplyr::select(subject_id,day_fct,treatment_group,prob.stay, prob.stay.coxph))
data.comp <-
data.comp %>%
mutate(
prob.stay = ifelse(day_fct==0, 1, prob.stay),
prob.stay.coxph = ifelse(day_fct==0, 1, prob.stay.coxph)
)
model.ipw.1 <- geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, data = data.comp, family = gaussian, id = subject_id, corstr = "independence", weights = 1/prob.stay)
model.ipw.2 <- geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, data = data.comp, family = gaussian, id = subject_id,  corstr = "ar1", weights = 1/prob.stay)
model.ipw.3 <- geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, data = data.comp, family = gaussian, id = subject_id, corstr = "exchangeable", weights = 1/prob.stay)
model.ipw.1.tbl <- tbl_regression(model.ipw.1,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender",
`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "OR")
)
model.ipw.2.tbl <- tbl_regression(model.ipw.2,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender",
`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "OR")
)
model.ipw.3.tbl <- tbl_regression(model.ipw.3,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender",
`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "OR")
)
model.ipw.tbl <-
tbl_merge(list(model.ipw.1.tbl, model.ipw.2.tbl, model.ipw.3.tbl), tab_spanner = c("Independent","AR-1","Exchangable")) %>% as_kable(booktabs = T, format = "latex",escape = FALSE) %>%  kable_styling(latex_options = c("hold_position")) %>% add_header_above(c(" ", "Independent" = 3, "AR-1" = 3, "Exchangable" = 3))
model.ipw.tbl
writeLines(as.character(model.ipw.tbl), "ipw_gee.tex")
model.ipw.coxph.1 <- geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, data = data.comp, family = gaussian, id = subject_id, corstr = "independence", weights = 1/prob.stay.coxph)
model.ipw.coxph.2 <- geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, data = data.comp, family = gaussian, id = subject_id,  corstr = "ar1", weights = 1/prob.stay.coxph)
model.ipw.coxph.3 <- geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, data = data.comp, family = gaussian, id = subject_id, corstr = "exchangeable", weights = 1/prob.stay.coxph)
tbl_merge(
list(tbl_regression(model.ipw.coxph.1), tbl_regression(model.ipw.coxph.2), tbl_regression(model.ipw.coxph.3))
)
View(data.surv)
View(data.comp)
View(data.surv)
knitr::opts_chunk$set(echo = TRUE)
data.comp %>%
dplyr::select(subject_id, day_fct, observed, treatment_group, age, gender) %>%
mutate(dropped = 1-observed)
data.surv <-
data.comp %>%
dplyr::select(subject_id, day_fct, observed, treatment_group, age, gender) %>%
mutate(dropped = 1-observed) %>%
distinct() %>%
dplyr::select(-observed) %>%
mutate(stop = as.numeric(day_fct)-1) %>%
group_by(subject_id) %>%
mutate(start = lag(stop),
just_droppef = ifelse(dropped == 0 & lag(dropped) == 1),1,0) %>%
drop_na(start)
library(survival)
library(ggsurvfit)
library(survminer)
data.surv <-
data.comp %>%
dplyr::select(subject_id, day_fct, observed, treatment_group, age, gender) %>%
mutate(dropped = 1-observed) %>%
distinct() %>%
dplyr::select(-observed) %>%
mutate(stop = as.numeric(day_fct)-1) %>%
group_by(subject_id) %>%
mutate(start = lag(stop),
just_dropped = ifelse(dropped == 0 & lag(dropped) == 1,1,0)) %>%
drop_na(start)
surv_object <- Surv(data.surv$start, data.surv$stop, data.surv$dropped)
surv_fit <- survfit(surv_object ~ treatment_group, data = data.surv)
stay.plot <-
ggsurvplot(
surv_fit,
data = data.surv,
xlab = "Days",
ylab = "Proportion remaining in the study",
ggtheme = theme_bw(),
#risk.table = "nrisk_cumcensor",
#tables.height = 0.3,
xlim = c(0,3.5),
ylim = c(0.30,1),
break.x.by = 1,
#axes.offset = T,
#risk.table.title = "",
ncensor.plot = T,
ncensor.plot.height = 0.5,
ncensor.plot.title = "",
legend.title = "Treatment Group", # legend title
legend.labs = c("A", "B", "C")
)
#stay.plot <- stay.plot$plot + scale_x_continuous(labels = c("0", "5", "19", "90"))
stay.plot
ggsave("./plots/stay_plot.jpg", (stay.plot$plot + scale_x_continuous(breaks = c(0,1,2,3),labels = c(0,5,19,90)) )/(stay.plot$ncensor.plot + theme(legend.position = "none")+ scale_x_continuous(breaks = c(0,1,2,3), labels = c(0,5,19,90))), width = 12, height = 8, dpi = 300)
table(data.full$treatment_group, data.full$day) %>% as.data.frame() %>%
group_by(Var1) %>%
mutate(Prop = Freq / first(Freq)) %>%
ggplot(aes(x = Var2, y = Prop, group = Var1, color = Var1)) +
geom_step(direction = "vh") +
geom_point()
surv_object <- Surv(data.surv$start, data.surv$stop, data.surv$just_dropped)
surv_fit <- survfit(surv_object ~ treatment_group, data = data.surv)
stay.plot <-
ggsurvplot(
surv_fit,
data = data.surv,
xlab = "Days",
ylab = "Proportion remaining in the study",
ggtheme = theme_bw(),
#risk.table = "nrisk_cumcensor",
#tables.height = 0.3,
xlim = c(0,3.5),
ylim = c(0.30,1),
break.x.by = 1,
#axes.offset = T,
#risk.table.title = "",
ncensor.plot = T,
ncensor.plot.height = 0.5,
ncensor.plot.title = "",
legend.title = "Treatment Group", # legend title
legend.labs = c("A", "B", "C")
)
stay.plot
surv_object <- Surv(data.surv$start, data.surv$stop, data.surv$dropped)
surv_fit <- survfit(surv_object ~ treatment_group, data = data.surv)
stay.plot <-
ggsurvplot(
surv_fit,
data = data.surv,
xlab = "Days",
ylab = "Proportion remaining in the study",
ggtheme = theme_bw(),
#risk.table = "nrisk_cumcensor",
#tables.height = 0.3,
xlim = c(0,3.5),
ylim = c(0.30,1),
break.x.by = 1,
#axes.offset = T,
#risk.table.title = "",
ncensor.plot = T,
ncensor.plot.height = 0.5,
ncensor.plot.title = "",
legend.title = "Treatment Group", # legend title
legend.labs = c("A", "B", "C")
)
stay.plot
ggsave("./plots/stay_plot.jpg", (stay.plot$plot + scale_x_continuous(breaks = c(0,1,2,3),labels = c(0,5,19,90)) )/(stay.plot$ncensor.plot + theme(legend.position = "none")+ scale_x_continuous(breaks = c(0,1,2,3), labels = c(0,5,19,90))), width = 12, height = 8, dpi = 300)
table(data.full$treatment_group, data.full$day) %>% as.data.frame() %>%
group_by(Var1) %>%
mutate(Prop = Freq / first(Freq)) %>%
ggplot(aes(x = Var2, y = Prop, group = Var1, color = Var1)) +
geom_step(direction = "vh") +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
source(knitr::purl("./data_manipulation.Rmd", quiet=TRUE))
source(knitr::purl("./EDA.Rmd", quiet=TRUE))
library(knitr)
library(kableExtra)
data.baseline <- data.comp %>% filter(day == 0)
library(table1)
data.baseline$gender = ifelse(data.baseline$gender == "M", "Male", "Female")
label(data.baseline$age) = "Age"
label(data.baseline$gender) = "Gender"
label(data.baseline$treatment_group) = "Treatment"
label(data.baseline$mem_comp) = "Baseline Composite Memory Score"
my.render.cont <- function(x) {
with(stats.default(x),
sprintf("%0.2f (%0.1f)", MEAN, SD))
}
tbl1 <- table1( ~ gender + age + mem_comp | treatment_group, data=data.baseline, render.continuous=my.render.cont) %>% t1kable(booktabs = TRUE, format = "latex") %>%  kable_styling(latex_options = c("hold_position", "scale_down"))
writeLines(as.character(tbl1), "tbl1.tex")
# centering age for better interpretation
data.full$age = data.full$age - mean(data.full$age)
data.comp$age = data.comp$age - mean(data.comp$age)
data.surv$age = data.surv$age - mean(data.surv$age)
library(gee)
library(geepack)
library(glmtoolbox)
library(gtsummary)
library(tidyverse)
data.comp.lag <-
data.comp %>%
group_by(subject_id) %>%
mutate(mem_comp_lag = lag(mem_comp), observed_lag = lag(observed)) %>%
ungroup() %>%
filter(observed_lag != 0) %>%
mutate(drop = ifelse(observed == 0 & observed_lag == 1, 1, 0)) %>%
dplyr::select(subject_id, day, day_fct, age, gender, treatment_group, mem_comp_lag, drop) %>%
mutate(day_fct = factor(day, levels = c(5,19,90)))
data.comp <-
data.comp %>%
group_by(subject_id) %>%
mutate(total_obs = sum(as.numeric(observed))) %>%
ungroup() %>%
mutate(type = as.factor(ifelse(total_obs == 4, "Completer", "Drop-out")))
model.complete.1 <- geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, data = data.comp %>% filter(type=="Completer"), family = gaussian, id = subject_id, corstr = "independence")
model.complete.2 <- geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, data = data.comp %>% filter(type=="Completer"), family = gaussian, id = subject_id,  corstr = "ar1")
model.complete.3 <- geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, data = data.comp %>% filter(type=="Completer"), family = gaussian, id = subject_id, corstr = "exchangeable")
model.complete.1.tbl <- tbl_regression(model.complete.1,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender",
`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "Beta")
)
model.complete.2.tbl <- tbl_regression(model.complete.2,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender",
`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "Beta")
)
model.complete.3.tbl <- tbl_regression(model.complete.3,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender",
`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "Beta")
)
model.complete.tbl <-
tbl_merge(list(model.complete.1.tbl, model.complete.2.tbl, model.complete.3.tbl), tab_spanner = c("Independent","AR-1","Exchangable")) %>% as_kable(booktabs = T, format = "latex",escape = FALSE) %>%  kable_styling(latex_options = c("hold_position")) %>% add_header_above(c(" ", "Independent" = 3, "AR-1" = 3, "Exchangable" = 3))
model.complete.tbl
writeLines(as.character(model.complete.tbl), "complete_case_gee.tex")
model.drop <-
geeglm(drop ~ day_fct + treatment_group + age + gender + mem_comp_lag, data = data.comp.lag, family = binomial, id = subject_id, corstr = "independence")
tbl_regression(model.drop, exponentiate = F)
View(data.comp.lag)
View(data.comp)
data.comp.lag <-
data.comp.lag %>%
group_by(subject_id) %>%
mutate(just_dropped = ifelse(drop == 1 & lag(drop) == 0, 1, 0)) %>%
ungroup()
data.comp.lag <-
data.comp.lag %>%
group_by(subject_id) %>%
mutate(just_dropped = ifelse((drop == 1 & lag(drop) == 0) | (drop == 1 & is.na(lag(drop))) , 1, 0)) %>%
ungroup()
model.drop <-
geeglm(drop ~ day_fct + treatment_group + age + gender + mem_comp_lag, data = data.comp.lag, family = binomial, id = subject_id, corstr = "independence")
tbl_regression(model.drop, exponentiate = F)
model.drop <-
geeglm(just_drop ~ day_fct + treatment_group + age + gender + mem_comp_lag, data = data.comp.lag, family = binomial, id = subject_id, corstr = "independence")
model.drop <-
geeglm(just_dropped ~ day_fct + treatment_group + age + gender + mem_comp_lag, data = data.comp.lag, family = binomial, id = subject_id, corstr = "independence")
tbl_regression(model.drop, exponentiate = F)
View(data.surv)
# propensity score models, using logistic regression and coxph model
model.prob.drop <-
geeglm(just_dropped ~ day_fct + treatment_group + age + gender, data = data.surv %>% mutate(day_fct = factor(day_fct,levels = c(5,19,90))), family = binomial, id = subject_id, corstr = "independence")
model.prob.drop.coxph <- coxph(Surv(start, stop, dropped) ~ treatment_group + age + gender, data = data.surv)
model.prob.drop.tbl <- tbl_regression(model.prob.drop, exponentiate = T,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "OR")
)  %>% as_kable(booktabs = T, format = "latex",escape = FALSE) %>%  kable_styling(latex_options = c("hold_position"))
writeLines(as.character(model.prob.drop.tbl), "ps_model.tex")
tbl_regression(model.prob.drop.coxph, exponentiate = F)
tbl_merge(
list(tbl_regression(model.prob.drop, exponentiate = F),tbl_regression(model.prob.drop.coxph, exponentiate = F))
)
predict.prob.drop <- predict(model.prob.drop, newdata = data.surv, type = "response")
predict.prob.drop.coxph <- predict(model.prob.drop.coxph, newdata = data.surv, type = "survival")
data.surv$prob.stay <- 1 - predict.prob.drop
data.surv$prob.stay.coxph <- predict.prob.drop.coxph
data.comp <- left_join(data.comp, data.surv %>% dplyr::select(subject_id,day_fct,treatment_group,prob.stay, prob.stay.coxph))
data.comp <-
data.comp %>%
mutate(
prob.stay = ifelse(day_fct==0, 1, prob.stay),
prob.stay.coxph = ifelse(day_fct==0, 1, prob.stay.coxph)
)
0.9978715*0.9836330
# propensity score models, using logistic regression and coxph model
model.prob.drop <-
geeglm(droppef ~ day_fct + treatment_group + age + gender, data = data.surv %>% mutate(day_fct = factor(day_fct,levels = c(5,19,90))), family = binomial, id = subject_id, corstr = "independence")
# propensity score models, using logistic regression and coxph model
model.prob.drop <-
geeglm(dropped ~ day_fct + treatment_group + age + gender, data = data.surv %>% mutate(day_fct = factor(day_fct,levels = c(5,19,90))), family = binomial, id = subject_id, corstr = "independence")
model.prob.drop.coxph <- coxph(Surv(start, stop, dropped) ~ treatment_group + age + gender, data = data.surv)
model.prob.drop.tbl <- tbl_regression(model.prob.drop, exponentiate = T,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "OR")
)  %>% as_kable(booktabs = T, format = "latex",escape = FALSE) %>%  kable_styling(latex_options = c("hold_position"))
writeLines(as.character(model.prob.drop.tbl), "ps_model.tex")
tbl_regression(model.prob.drop.coxph, exponentiate = F)
tbl_regression(model.prob.drop.coxph, exponentiate = F)
tbl_merge(
list(tbl_regression(model.prob.drop, exponentiate = F),tbl_regression(model.prob.drop.coxph, exponentiate = F))
)
tbl_merge(
list(tbl_regression(model.prob.drop, exponentiate = F),tbl_regression(model.prob.drop.coxph, exponentiate = F))
)
predict.prob.drop <- predict(model.prob.drop, newdata = data.surv, type = "response")
predict.prob.drop <- predict(model.prob.drop, newdata = data.surv, type = "response")
predict.prob.drop.coxph <- predict(model.prob.drop.coxph, newdata = data.surv, type = "survival")
data.surv$prob.stay <- 1 - predict.prob.drop
data.surv$prob.stay <- 1 - predict.prob.drop
data.surv$prob.stay.coxph <- predict.prob.drop.coxph
View(data.surv)
0.9724165*0.8154829
0.7433293*0.792989
model.prob.drop.coxph.tbl <- tbl_regression(model.prob.coxph.drop, exponentiate = T,label = list(
#day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "HR")
)  %>% as_kable(booktabs = T, format = "latex",escape = FALSE) %>%  kable_styling(latex_options = c("hold_position"))
model.prob.drop.coxph <- coxph(Surv(start, stop, dropped) ~ treatment_group + age + gender, data = data.surv)
model.prob.drop.coxph.tbl <- tbl_regression(model.prob.drop.coxph, exponentiate = T,label = list(
#day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "HR")
)  %>% as_kable(booktabs = T, format = "latex",escape = FALSE) %>%  kable_styling(latex_options = c("hold_position"))
writeLines(as.character(model.prob.drop.coxph.tbl), "ps_cox_model.tex")
