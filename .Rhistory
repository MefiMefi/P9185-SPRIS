education ~ "Education level"
))%>%
modify_header( update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "HR")) %>%
as_kable(booktabs = T, escape = FALSE) %>%  kable_styling(latex_options = c("hold_position"))
install.packages("Deriv")
Deriv(~solve(matrix(c(1, x, x**2, x**3), nrow=2, ncol=2)))
Deriv::Deriv(~solve(matrix(c(1, x, x**2, x**3), nrow=2, ncol=2)))
theta <- list(m=0.1, sd=2.)
x <- names(theta)
names(x)=rep("theta", length(theta))
Deriv(~exp(-(x-theta$m)**2/(2*theta$sd)), x, cache.exp=FALSE)
theta <- list(m=0.1, sd=2.)
x <- names(theta)
names(x)=rep("theta", length(theta))
Deriv::Deriv(~exp(-(x-theta$m)**2/(2*theta$sd)), x, cache.exp=FALSE)
library(Deriv)
library(Deriv)
source("~/.active-rstudio-document", echo=TRUE)
View(hessL)
print(hessL())
print(hessL)
vd=unlist(Deriv(f, "x", nderiv=0:k)(x0))
source("~/.active-rstudio-document", echo=TRUE)
f
Deriv(f, "x", nderiv=0:2)(2)
Deriv(f, "x")
matrix(
c(
(p0 * a1 + (1-p0) * b1) - (p0 * a2 + (1-p0) * b1),
(p0 * a1 + (1-p0) * b1) - (p0 * a1 + (1-p0) * b2),
(p0 * a1 + (1-p0) * b1) - (p0 * a2 + (1-p0) * b2),
(p0 * a1 + (1-p0) * b1) - (p1 * c1 + (1-p1) * d1)
),
nrow = 4
)
R = function(p0, a1, a2, b1, b2, p1, c1, d1){
matrix(
c(
(p0 * a1 + (1-p0) * b1) - (p0 * a2 + (1-p0) * b1),
(p0 * a1 + (1-p0) * b1) - (p0 * a1 + (1-p0) * b2),
(p0 * a1 + (1-p0) * b1) - (p0 * a2 + (1-p0) * b2),
(p0 * a1 + (1-p0) * b1) - (p1 * c1 + (1-p1) * d1)
),
nrow = 4
)
}
?Deriv
Deriv(R)
print(Deriv(R))
dR = Deriv(R)
View(dR)
dR(p0, a1, a2, b1, b2, p1, c1, d1)
dR(p0, a1, a2, b1, b2, p1, c1, d1)
dR("p0", a1, a2, b1, b2, p1, c1, d1)
dR("p0", "a1", a2, b1, b2, p1, c1, d1)
dR(0.5,1,1,2,2,0.5,1,2)
matrix(dR(0.5,1,1,2,2,0.5,1,2), nrow = 4)
rank(matrix(dR(0.5,1,1,2,2,0.5,1,2), nrow = 4))
qr(matrix(dR(0.5,1,1,2,2,0.5,1,2), nrow = 4))
qr(matrix(dR(0.5,1,1,1,1,0.5,1,1), nrow = 4))
matrix(dR(0.5,1,1,1,1,0.5,1,1), nrow = 4)
library(readxl)
library(mice)
library(ggplot2)
library(tidyverse)
library(cowplot)
library(lme4)
setwd("./Project5")
getwd()
setwd("F:/PhD in Biostatistics/Coursework/Spring 2024/P9185 SPRIS/Project5")
setwd("~/Project5")
setwd("~/Project 5")
Proj_4_data <- read_excel("./Proj 4 data.xlsx")
setwd("F:/PhD in Biostatistics/Coursework/Spring 2024/P9185 SPRIS/Project 5")
Proj_4_data <- read_excel("./Proj 4 data.xlsx")
Proj_4_data$school <- as.factor(Proj_4_data$school)
Proj_4_data$group <- as.factor(Proj_4_data$group)
Proj_4_data$ID <- as.factor(Proj_4_data$ID)
md.pattern(Proj_4_data)
mice_imputed <- data.frame(
original = Proj_4_data$SFD,
imputed_pmm = complete(mice(Proj_4_data, method = "pmm"))$SFD,
imputed_cart = complete(mice(Proj_4_data, method = "cart"))$SFD,
imputed_lasso = complete(mice(Proj_4_data, method = "lasso.norm"))$SFD
)
mice_imputed
h1 <- ggplot(mice_imputed, aes(x = original)) +
geom_histogram(fill = "#ad1538", color = "#000000", position = "identity") +
ggtitle("Original distribution") +
theme_classic()
h2 <- ggplot(mice_imputed, aes(x = imputed_pmm)) +
geom_histogram(fill = "#15ad4f", color = "#000000", position = "identity") +
ggtitle("PMM-imputed distribution") +
theme_classic()
h3 <- ggplot(mice_imputed, aes(x = imputed_cart)) +
geom_histogram(fill = "#1543ad", color = "#000000", position = "identity") +
ggtitle("CART-imputed distribution") +
theme_classic()
h4 <- ggplot(mice_imputed, aes(x = imputed_lasso)) +
geom_histogram(fill = "#ad8415", color = "#000000", position = "identity") +
ggtitle("Lasso-imputed distribution") +
theme_classic()
plot_grid(h1, h2, h3, h4, nrow = 2, ncol = 2)
Proj_4_data$SFD_imputed <- mice_imputed$imputed_cart
# check zero-inflation
hist(Proj_4_data$SFD_imputed)
# check over-dispersion
mean(Proj_4_data$SFD_imputed)
variance(Proj_4_data$SFD_imputed)
var(Proj_4_data$SFD_imputed)
# standard negative binomial
mnb1 <- glmer.nb(SFD_imputed ~ group * time +
(1 | school) + (1 | ID), data = Proj_4_data, control = glmerControl(optimizer = "bobyqa"))
overdisp_fun(mnb1)
summary(mnb1)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ 1, control = list(iter_EM = 0))
summary(gm1)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ 1, control = list(iter_EM = 0))
library(GLMMadaptive)
Proj_4_data <- read_excel("./Proj 4 data.xlsx")
Proj_4_data$school <- as.factor(Proj_4_data$school)
Proj_4_data$group <- as.factor(Proj_4_data$group)
Proj_4_data$ID <- as.factor(Proj_4_data$ID)
md.pattern(Proj_4_data)
mice_imputed <- data.frame(
original = Proj_4_data$SFD,
imputed_pmm = complete(mice(Proj_4_data, method = "pmm"))$SFD,
imputed_cart = complete(mice(Proj_4_data, method = "cart"))$SFD,
imputed_lasso = complete(mice(Proj_4_data, method = "lasso.norm"))$SFD
)
mice_imputed
h1 <- ggplot(mice_imputed, aes(x = original)) +
geom_histogram(fill = "#ad1538", color = "#000000", position = "identity") +
ggtitle("Original distribution") +
theme_classic()
h2 <- ggplot(mice_imputed, aes(x = imputed_pmm)) +
geom_histogram(fill = "#15ad4f", color = "#000000", position = "identity") +
ggtitle("PMM-imputed distribution") +
theme_classic()
h3 <- ggplot(mice_imputed, aes(x = imputed_cart)) +
geom_histogram(fill = "#1543ad", color = "#000000", position = "identity") +
ggtitle("CART-imputed distribution") +
theme_classic()
h4 <- ggplot(mice_imputed, aes(x = imputed_lasso)) +
geom_histogram(fill = "#ad8415", color = "#000000", position = "identity") +
ggtitle("Lasso-imputed distribution") +
theme_classic()
plot_grid(h1, h2, h3, h4, nrow = 2, ncol = 2)
Proj_4_data$SFD_imputed <- mice_imputed$imputed_cart
# check zero-inflation
hist(Proj_4_data$SFD_imputed)
# check over-dispersion
mean(Proj_4_data$SFD_imputed)
var(Proj_4_data$SFD_imputed)
# standard negative binomial
mnb1 <- glmer.nb(SFD_imputed ~ group * time +
(1 | school) + (1 | ID), data = Proj_4_data, control = glmerControl(optimizer = "bobyqa"))
overdisp_fun(mnb1)
summary(mnb1)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ 1, control = list(iter_EM = 0))
summary(gm1)
# zero inflated negative binomial with both fixed and random effects in the zero part
gm2 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ 1, zi_random = ~ 1 | ID, control = list(iter_EM = 0))
summary(gm1)
# model selection
anova(gm1, gm2)
?mixed_model
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ 1, control = list(iter_EM = 50))
source("F:/PhD in Biostatistics/Coursework/Spring 2024/P9185 SPRIS/Project 5/proj5.R", echo=TRUE)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ 1, control = list(iter_EM = 0))
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ 1, control = list(iter_EM = 50))
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.poisson(),zi_fixed = ~ 1, control = list(iter_EM = 50))
View(gm1)
overdisp_fun(mnb1)
plot_grid(h1, h2, h3, h4, nrow = 2, ncol = 2)
# check zero-inflation
hist(Proj_4_data$SFD_imputed)
# check over-dispersion
mean(Proj_4_data$SFD_imputed)
var(Proj_4_data$SFD_imputed)
# standard negative binomial
mnb1 <- glmer.nb(SFD_imputed ~ group * time +
(1 | school) + (1 | ID), data = Proj_4_data, control = glmerControl(optimizer = "bobyqa"))
overdisp_fun(mnb1)
summary(mnb1)
predict(gm1, newdata = Proj_4_data)
hist(predict(gm1, newdata = Proj_4_data))
hist(predict(gm1, newdata = Proj_4_data))
hist(predict(gm1, newdata = Proj_4_data))
hist(predict(gm2, newdata = Proj_4_data))
hist(predict(gm1, newdata = Proj_4_data))
hist(predict(gm2, newdata = Proj_4_data))
hist(predict(gm2, newdata = Proj_4_data),breaks = 20)
hist(predict(gm2, newdata = Proj_4_data),breaks = 50)
predict(gm1, newdata = Proj_4_data)
Proj_4_data$SFD_imputed
plot_grid(h1, h2, h3, h4, nrow = 2, ncol = 2)
# zero inflated negative binomial with both fixed and random effects in the zero part
gm2 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ 1, zi_random = ~ 1 | ID, control = list(iter_EM = 50))
summary(gm1)
summary(gm2)
# standard negative binomial
mnb1 <- glmer.nb(SFD_imputed ~ group  + offset(log(time)) +
(1 | school) + (1 | ID), data = Proj_4_data, control = glmerControl(optimizer = "bobyqa"))
overdisp_fun(mnb1)
summary(mnb1)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + offset(log(time)), random = ~ 1 | ID, data = Proj_4_data,
family = zi.poisson(),zi_fixed = ~ 1, control = list(iter_EM = 50))
summary(gm1)
predict(gm1, newdata = Proj_4_data)
Proj_4_data$SFD_imputed
hist(predict(gm1, newdata = Proj_4_data))
# zero inflated negative binomial with both fixed and random effects in the zero part
gm2 <- mixed_model(SFD_imputed ~ group + offset(log(time)), random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ 1, zi_random = ~ 1 | ID, control = list(iter_EM = 50))
summary(gm2)
hist(predict(gm2, newdata = Proj_4_data))
predict(gm2, newdata = Proj_4_data)
hist(predict(gm2, newdata = Proj_4_data),freq = F)
hist(predict(gm2, newdata = Proj_4_data),freq =T)
# model selection
anova(gm1, gm2)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + offset(log(time)), random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ 1, control = list(iter_EM = 50))
summary(gm1)
hist(predict(gm1, newdata = Proj_4_data))
Proj_4_data$SFD_imputed
# zero inflated negative binomial with both fixed and random effects in the zero part
gm2 <- mixed_model(SFD_imputed ~ group + offset(log(time)), random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ 1, zi_random = ~ 1 | ID, control = list(iter_EM = 50))
summary(gm2)
hist(predict(gm2, newdata = Proj_4_data),freq =T)
# model selection
anova(gm1, gm2)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ group + time, control = list(iter_EM = 50))
summary(gm1)
hist(predict(gm1, newdata = Proj_4_data))
# standard negative binomial
mnb1 <- glmer.nb(SFD_imputed ~ group  + time +
(1 | school) + (1 | ID), data = Proj_4_data, control = glmerControl(optimizer = "bobyqa"))
overdisp_fun(mnb1)
summary(mnb1)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ group + time, control = list(iter_EM = 50))
var(Proj_4_data$SFD_imputed)
# check over-dispersion
mean(Proj_4_data$SFD_imputed)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.poisson.binomial(),zi_fixed = ~ group + time, control = list(iter_EM = 50))
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.poisson(),zi_fixed = ~ group + time, control = list(iter_EM = 50))
summary(gm1)
hist(predict(gm1, newdata = Proj_4_data))
Proj_4_data$SFD_imputed
predict(gm1, newdata = Proj_4_data)
# zero inflated negative binomial with both fixed and random effects in the zero part
gm2 <- mixed_model(SFD_imputed ~ group + offset(log(time)), random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~  group + time, zi_random = ~ 1 | ID, control = list(iter_EM = 50))
# zero inflated negative binomial with both fixed and random effects in the zero part
gm2 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~  group + time, zi_random = ~ 1 | ID, control = list(iter_EM = 50))
summary(gm2)
hist(predict(gm2, newdata = Proj_4_data),freq =T)
# zero inflated negative binomial with both fixed and random effects in the zero part
gm2 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.poisson(),zi_fixed = ~  group + time, zi_random = ~ 1 | ID, control = list(iter_EM = 50))
summary(gm2)
hist(predict(gm2, newdata = Proj_4_data),freq =T)
# model selection
anova(gm1, gm2)
install.packages("glmmTMB")
library(glmmTMB)
View(Proj_4_data)
family = nbinom2
gm1.zinb <- glmmTMB(SFD ~ group + time + (1|ID) + (1|school),
zi = ~ group + time + (1|ID) + (1|school),
data = Proj_4_data,
family = nbinom2)
summary(gm1.zinb)
gm1.zinb <- glmmTMB(SFD ~ group + time + (1|ID) + (1|school),
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2)
summary(gm1)
summary(gm1)
summary(gm1.zinb)
?glmmTMB
gm1.zinb <- glmmTMB(SFD ~ group + time + (1|ID) + (1|school),
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, verbose = T)
gm1.zinb <- glmmTMB(SFD ~ group + time + (1|ID) + (1|school),
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, verbose = T, REML = T)
vignette('troubleshooting')
data("Nile")
ndat <- data.frame(time = c(time(Nile)), val = c(Nile))
sm1 <- glmmTMB(val ~ s(time), data = ndat,
REML = TRUE, start = list(theta = 5))
plot(val ~ time, data = ndat)
lines(ndat$time, predict(sm1))
gm1.zinb <- glmmTMB(SFD_imputed ~ group + time + (1|ID) + (1|school),
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, verbose = T, REML = T)
gm1.zinb <- glmmTMB(SFD_imputed ~ group + time + (1|ID) + (1|school),
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, REML = T)
gm1.zinb <- glmmTMB(SFD_imputed ~ group + time + (1|ID:school) ,
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, REML = T)
summary(gm1)
summary(gm1.zinb)
gm1.zinb <- glmmTMB(SFD_imputed ~ group + time + (1|ID*school) ,
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, REML = T)
gm1.zinb <- glmmTMB(SFD_imputed ~ group + time + (1|ID:school) ,
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, REML = T)
summary(gm1)
summary(gm1.zinb)
gm1.zinb <- glmmTMB(SFD_imputed ~ group + time + (1|ID) ,
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, REML = T)
vignette("troubleshooting",package="glmmTMB")
summary(gm1.zinb)
fixef(gm1.zinb)
fixef(gm1.zinb)$zi
plogis(-1.1809560)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.poisson(),zi_fixed = ~ group, control = list(iter_EM = 50))
gm1.zinb <- glmmTMB(SFD_imputed ~ group + time + (1|ID) ,
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, REML = T)
summary(gm1)
summary(gm1.zinb)
summary(gm1.zinb)
gm1.zinb <- glmmTMB(SFD ~ group + time + (1|ID) ,
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, REML = T)
gm1.zinb <- glmmTMB(SFD ~ group + time + (1|ID) ,
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, REML = T, na.action = na.exclude())
gm1.zinb <- glmmTMB(SFD ~ group + time + (1|ID) ,
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, REML = T)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.poisson(),zi_fixed = ~ group, control = list(iter_EM = 50))
gm1.zinb <- glmmTMB(SFD ~ group + time + (1|ID) ,
zi = ~ group + time ,
data = Proj_4_data,
family = nbinom2, REML = T)
summary(gm1)
gm1.zinb <- glmmTMB(SFD ~ group + time + (1|ID) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
summary(gm1)
summary(gm1.zinb)
hist(predict(gm1, newdata = Proj_4_data))
gm1.zinb <- glmmTMB(SFD ~ group + time + (1|ID:school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
summary(gm1)
summary(gm1.zinb)
gm1.zinb.2 <- glmmTMB(SFD ~ group + time + (1|ID) + (1|school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
summary(gm1)
gm1.zinb.1 <- glmmTMB(SFD ~ group + time + (1|ID:school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
gm1.zinb.2 <- glmmTMB(SFD ~ group + time + (1|ID) + (1|school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
summary(gm1)
summary(gm1.zinb.1)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ group, control = list(iter_EM = 50))
gm1.zinb.1 <- glmmTMB(SFD ~ group + time + (1|ID:school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
gm1.zinb.2 <- glmmTMB(SFD ~ group + time + (1|ID) + (1|school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
summary(gm1)
summary(gm1.zinb.1)
summary(gm1.zinb.2)
hist(predict(gm1.zib.1, newdata = Proj_4_data))
hist(predict(gm1.zinb.1, newdata = Proj_4_data))
predict(gm1.zinb.1, newdata = Proj_4_data)
glmmTMB:::predict.glmmTMB(gm1.zinb.1, newdata = Proj_4_data)
glmmTMB:::predict.glmmTMB(gm1.zinb.1, newdata = Proj_4_data)
glmmTMB:::predict.glmmTMB(gm1.zinb.1, newdata = Proj_4_data, allow.new.levels = T)
gm1.zinb.1 <- glmmTMB(SFD ~ group + time + (1|ID:school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
glmmTMB:::predict.glmmTMB(gm1.zinb.1, newdata = Proj_4_data[,1:5])
glmmTMB:::predict.glmmTMB(gm1.zinb.1, newdata = Proj_4_data[,1:5])
gm1.zinb.2 <- glmmTMB(SFD ~ group + time + (1|ID) + (1|school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
Proj_4_data[,1:5]
gm1.zinb.2 <- glmmTMB(SFD ~ group + time + (1|ID) + (1|school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
?glmmTMB:::predict.glmmTMB
predict(gm1.zinb.1, Proj_4_data)
predict(gm1.zinb.1)
hist(predict(gm1.zinb.1))
# check zero-inflation
hist(Proj_4_data$SFD_imputed)
gm1.zinb.1 <- glmmTMB(SFD_imputed ~ group + time + (1|ID:school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
gm1.zinb.2 <- glmmTMB(SFD_imputed ~ group + time + (1|ID) + (1|school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
summary(gm1)
summary(gm1.zinb.1)
summary(gm1.zinb.2)
hist(predict(gm1, newdata = Proj_4_data))
hist(predict(gm1.zinb.1))
summary(gm1.zinb.1)
# zero inflated negative binomial with only fixed effects in the zero part
gm1 <- mixed_model(SFD_imputed ~ group + time, random = ~ 1 | ID:school, data = Proj_4_data,
family = zi.negative.binomial(),zi_fixed = ~ group, control = list(iter_EM = 50))
gm2.zinb.1 <- glmmTMB(SFD_imputed ~ group + time + (1|ID:school) ,
zi = ~ group + (1|ID:school),
data = Proj_4_data,
family = nbinom2, REML = T)
gm2.zinb.1 <- glmmTMB(SFD_imputed ~ group + time + (1|ID:school) ,
zi = ~ group + (1|ID),
data = Proj_4_data,
family = nbinom2, REML = T)
gm2.zinb.1 <- glmmTMB(SFD_imputed ~ group + time + (1|ID:school) ,
zi = ~ group + (1|school),
data = Proj_4_data,
family = nbinom2, REML = T)
gm2.zinb.1 <- glmmTMB(SFD_imputed ~ group + time + (1|ID:school) ,
zi = ~ group,
data = Proj_4_data,
family = nbinom2, REML = T)
summary(gm2.zinb.1)
?glmmTMBControl()
gm2.zinb.1 <- glmmTMB(SFD_imputed ~ group + time + (1|ID:school) ,
zi = ~ group + (1|ID:school),
data = Proj_4_data,
family = nbinom2, REML = T, control=glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS")))
summary(gm2.zinb.1)
anova(gm2.zinb.1, gm1.zinb.1)
?glmmTMB
gm1.zinb.1 <- glmmTMB(SFD_imputed ~ group*time + (1|ID:school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
gm1.zinb.1 <- glmmTMB(SFD_imputed ~ group + time + (1|ID) + (1|school) ,
zi = ~ group ,
data = Proj_4_data,
family = nbinom2, REML = T)
summary(gm1.zinb.1)
2^(-0.25)
(2^(-0.25) * gamma(0.75) * 4 )/(2^(-0.75)* gamma(0.25))/ (2^(-0.75)* gamma(0.25))
2^(-0.25) * gamma(0.75)
