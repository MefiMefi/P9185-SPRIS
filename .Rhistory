)  %>% as_kable(booktabs = T,escape = FALSE) %>%  kable_styling(latex_options = c("hold_position"))
tbl_regression(model.prob.drop.coxph, exponentiate = T,label = list(
#day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "$95\\%$ CI", label = "Characteristics", estimate = "HR")
)  %>% as_kable(booktabs = T,escape = FALSE, caption = "Coefficent estimates of the dropout risk model.") %>%  kable_styling(latex_options = c("hold_position"))
tbl_merge(list(model.ipw.coxph.1.tbl, model.ipw.coxph.2.tbl, model.ipw.coxph.3.tbl), tab_spanner = c("Independent","AR-1","Exchangable")) %>% as_kable(booktabs = T, format = "latex",escape = FALSE) %>%  kable_styling(latex_options = c("hold_position")) %>% add_header_above(c(" ", "Independent" = 3, "AR-1" = 3, "Exchangable" = 3))
tbl_merge(list(model.ipw.coxph.1.tbl, model.ipw.coxph.2.tbl, model.ipw.coxph.3.tbl), tab_spanner = c("Independent","AR-1","Exchangable")) %>% as_kable(booktabs = T, escape = FALSE) %>%  kable_styling(latex_options = c("hold_position")) %>% add_header_above(c(" ", "Independent" = 3, "AR-1" = 3, "Exchangable" = 3))
# testing treatment effects
anova(model.ipw.coxph.trt.1, model.ipw.coxph.null.1) # 0.0346
# testing interactions
anova(model.ipw.coxph.trt.1, model.ipw.coxph.1) # 0.2212
data.comp %>%
group_by(treatment_group) %>%
summarise(observed = round(sum(!is.na(mem_comp))/158,digits=2), missing = round(sum(is.na(mem_comp))/30, digits = 2))
temp <- matrix(c(58, 46, 54, 10, 10, 10),nrow=3,ncol=2)
chisq.test(temp,correct=FALSE)
delta_MNAR_f = function(delta){
MAR_step = mice(data.comp, m=5, method = "pmm", quickpred(data.comp, exc = "observed"), seed = 20)
MNAR_conversion_delta =
complete(MAR_step, action='long', include=TRUE) %>%
mutate(mem_comp = ifelse(observed == 0, mem_comp + delta, mem_comp))
MNAR_conversion_delta <- MNAR_conversion_delta %>%
arrange(.imp, subject_id, day) %>%
group_by(.imp, subject_id) %>%
mutate(baseline_mem_comp = first(mem_comp)) %>%
mutate(mem_comp_delta = mem_comp - baseline_mem_comp, na.rm = T)
MNAR_conversion_delta <- MNAR_conversion_delta %>% filter(day > 0)%>% mutate(day_fct = factor(day_fct, levels = c(5,19,90)))
MNAR_data_delta = as.mids(MNAR_conversion_delta)
# output_delta =
#   with(MNAR_data_delta, geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, family = gaussian, id = subject_id, corstr = "independence"))
output_delta =
with(MNAR_data_delta, geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, family = gaussian, id = subject_id, corstr = "independence"))
params_delta =
summary(pool(output_delta)) %>%
filter(term == "treatment_groupC")
desc_delta = with(MNAR_data_delta, expr=c("Y_mean"=mean(mem_comp), "Y_sd"=stats::sd(mem_comp)))
desc_delta = withPool_MI(desc_delta) %>% as.data.frame() %>% t()
cbind(params_delta, desc_delta)
}
# Set range of plausible delta values
delta_inputs = c( -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 1.2, 2,5)
# Map output
output_delta =
map_df(delta_inputs, delta_MNAR_f)
rownames(output_delta) <- c()
#Output
output_formatted_delta =
cbind(delta_inputs, output_delta) %>%
select(-term) %>%
mutate(across(c("estimate":"std.error"), round, 3),
#across(c("statistic":"df", "Y_mean":"Y_sd"), round, 2),
p.value = scientific(p.value, digits = 2))
output_formatted_delta %>%
knitr::kable(bootstrap_options = "condensed")
output_formatted_delta %>%
knitr::kable()
View(output_formatted_delta)
output_formatted_delta %>%
knitr::kable(booktabs = T)
model.ipw.coxph.3.tbl <- tbl_regression(model.ipw.coxph.3,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender",
`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "$95\\%$ CI", label = "Characteristics", estimate = "$\\beta$")
)
model.ipw.coxph.3.tbl <- tbl_regression(model.ipw.coxph.3,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender",
`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "$95\\%$ CI", label = "Characteristics", estimate = "$\\widehat\\beta$")
)
model.ipw.coxph.tbl <-
tbl_merge(list(model.ipw.coxph.1.tbl, model.ipw.coxph.2.tbl, model.ipw.coxph.3.tbl), tab_spanner = c("Independent","AR-1","Exchangable")) %>% as_kable(booktabs = T, format = "latex",escape = FALSE) %>%  kable_styling(latex_options = c("hold_position")) %>% add_header_above(c(" ", "Independent" = 3, "AR-1" = 3, "Exchangable" = 3))
tbl_merge(list(model.ipw.coxph.1.tbl, model.ipw.coxph.2.tbl, model.ipw.coxph.3.tbl), tab_spanner = c("Independent","AR-1","Exchangable")) %>% as_kable(booktabs = T, escape = FALSE) %>%  kable_styling(latex_options = c("hold_position", "scale_down ")) %>% add_header_above(c(" ", "Independent" = 3, "AR-1" = 3, "Exchangable" = 3))
output_formatted_delta %>%
knitr::kable(booktabs = T, escape = F, col.names = c("$\\delta$", "$\\widehat\\beta_4$"))
View(output_formatted_delta)
delta_MNAR_f = function(delta){
MAR_step = mice(data.comp, m=5, method = "pmm", quickpred(data.comp, exc = "observed"), seed = 20)
MNAR_conversion_delta =
complete(MAR_step, action='long', include=TRUE) %>%
mutate(mem_comp = ifelse(observed == 0, mem_comp + delta, mem_comp))
MNAR_conversion_delta <- MNAR_conversion_delta %>%
arrange(.imp, subject_id, day) %>%
group_by(.imp, subject_id) %>%
mutate(baseline_mem_comp = first(mem_comp)) %>%
mutate(mem_comp_delta = mem_comp - baseline_mem_comp, na.rm = T)
MNAR_conversion_delta <- MNAR_conversion_delta %>% filter(day > 0)%>% mutate(day_fct = factor(day_fct, levels = c(5,19,90)))
MNAR_data_delta = as.mids(MNAR_conversion_delta)
# output_delta =
#   with(MNAR_data_delta, geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, family = gaussian, id = subject_id, corstr = "independence"))
output_delta =
with(MNAR_data_delta, geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, family = gaussian, id = subject_id, corstr = "independence"))
params_delta =
summary(pool(output_delta)) %>%
filter(term == "treatment_groupC")
desc_delta = with(MNAR_data_delta, expr=c("Y_mean"=mean(mem_comp), "Y_sd"=stats::sd(mem_comp)))
desc_delta = withPool_MI(desc_delta) %>% as.data.frame() %>% t()
cbind(params_delta, desc_delta)
}
# Set range of plausible delta values
delta_inputs = c( -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 1.2, 2, 5, 7)
# Map output
output_delta =
map_df(delta_inputs, delta_MNAR_f)
rownames(output_delta) <- c()
#Output
output_formatted_delta =
cbind(delta_inputs, output_delta) %>%
select(-term) %>%
mutate(across(c("estimate":"std.error"), round, 3),
#across(c("statistic":"df", "Y_mean":"Y_sd"), round, 2),
p.value = scientific(p.value, digits = 2))
output_formatted_delta %>%
knitr::kable(booktabs = T, escape = F, col.names = c("$\\delta$", "$\\widehat\\beta_4$"))
output_formatted_delta %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, col.names = c("$\\delta$", "$\\widehat\\beta_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"))
output_formatted_delta %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, col.names = c("$\\delta$", "$\\widehat{\\beta}_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"))
output_formatted_delta %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, col.names = c("$\\delta$", "${\\widehat{\\beta}}_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"))
output_formatted_delta %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, digits = 2, col.names = c("$\\delta$", "${\\widehat{\\beta}}_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"))
delta_MNAR_f = function(delta){
MAR_step = mice(data.comp, m=5, method = "pmm", quickpred(data.comp, exc = "observed"), seed = 20)
MNAR_conversion_delta =
complete(MAR_step, action='long', include=TRUE) %>%
mutate(mem_comp = ifelse(observed == 0, mem_comp + delta, mem_comp))
MNAR_conversion_delta <- MNAR_conversion_delta %>%
arrange(.imp, subject_id, day) %>%
group_by(.imp, subject_id) %>%
mutate(baseline_mem_comp = first(mem_comp)) %>%
mutate(mem_comp_delta = mem_comp - baseline_mem_comp, na.rm = T)
MNAR_conversion_delta <- MNAR_conversion_delta %>% filter(day > 0)%>% mutate(day_fct = factor(day_fct, levels = c(5,19,90)))
MNAR_data_delta = as.mids(MNAR_conversion_delta)
# output_delta =
#   with(MNAR_data_delta, geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, family = gaussian, id = subject_id, corstr = "independence"))
output_delta =
with(MNAR_data_delta, geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, family = gaussian, id = subject_id, corstr = "independence"))
params_delta =
summary(pool(output_delta)) %>%
filter(term == "treatment_groupC")
desc_delta = with(MNAR_data_delta, expr=c("Y_mean"=mean(mem_comp), "Y_sd"=stats::sd(mem_comp)))
desc_delta = withPool_MI(desc_delta) %>% as.data.frame() %>% t()
cbind(params_delta, desc_delta)
}
# Set range of plausible delta values
delta_inputs = c( -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 1.2, 2, 5)
# Map output
output_delta =
map_df(delta_inputs, delta_MNAR_f)
rownames(output_delta) <- c()
#Output
output_formatted_delta =
cbind(delta_inputs, output_delta) %>%
select(-term) %>%
mutate(across(c("estimate":"std.error"), round, 3),
#across(c("statistic":"df", "Y_mean":"Y_sd"), round, 2),
p.value = scientific(p.value, digits = 2))
output_formatted_delta %>%
mutate() %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, digits = 2, col.names = c("$\\delta$", "${\\widehat{\\beta}}_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"), caption = "Estimated treatment effect of treatment C using imputed data with different $\\delta$ value.")
```{r long-plot, fig.height = 4, fig.width=10, fig.cap = "Change of composite memory score across time. Left panel: Change of raw memory score, stratified by treatments. Right panel: Change of difference between current memory score and baseline memory score. The blue line is the population trend fitted by linear model."}
traj.plot + traj.change.plot
traj.plot + traj.change.plot
traj.plot + traj.change.plot
output_formatted_delta %>%
mutate(p.value = round(p.value, 2))
#Output
output_formatted_delta =
cbind(delta_inputs, output_delta) %>%
select(-term) %>%
mutate(across(c("estimate":"std.error"), round, 3),
#across(c("statistic":"df", "Y_mean":"Y_sd"), round, 2),
p.value = round(p.value, digits = 2))
output_formatted_delta %>%
mutate(p.value = round(p.value, 2)) %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, digits = 2, col.names = c("$\\delta$", "${\\widehat{\\beta}}_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"), caption = "Estimated treatment effect of treatment C using imputed data with different $\\delta$ value.")
output_formatted_delta %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, digits = 2, col.names = c("$\\delta$", "${\\widehat{\\beta}}_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"), caption = "Estimated treatment effect of treatment C using imputed data with different $\\delta$ value.")
delta_MNAR_f = function(delta){
MAR_step = mice(data.comp, m=5, method = "pmm", quickpred(data.comp, exc = "observed"), seed = 20)
MNAR_conversion_delta =
complete(MAR_step, action='long', include=TRUE) %>%
mutate(mem_comp = ifelse(observed == 0, mem_comp + delta, mem_comp))
MNAR_conversion_delta <- MNAR_conversion_delta %>%
arrange(.imp, subject_id, day) %>%
group_by(.imp, subject_id) %>%
mutate(baseline_mem_comp = first(mem_comp)) %>%
mutate(mem_comp_delta = mem_comp - baseline_mem_comp, na.rm = T)
MNAR_conversion_delta <- MNAR_conversion_delta %>% filter(day > 0)%>% mutate(day_fct = factor(day_fct, levels = c(5,19,90)))
MNAR_data_delta = as.mids(MNAR_conversion_delta)
# output_delta =
#   with(MNAR_data_delta, geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, family = gaussian, id = subject_id, corstr = "independence"))
output_delta =
with(MNAR_data_delta, geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender , family = gaussian, id = subject_id, corstr = "independence"))
params_delta =
summary(pool(output_delta)) %>%
filter(term == "treatment_groupC")
desc_delta = with(MNAR_data_delta, expr=c("Y_mean"=mean(mem_comp), "Y_sd"=stats::sd(mem_comp)))
desc_delta = withPool_MI(desc_delta) %>% as.data.frame() %>% t()
cbind(params_delta, desc_delta)
}
# Set range of plausible delta values
delta_inputs = c( -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 1.2, 2, 5)
# Map output
output_delta =
map_df(delta_inputs, delta_MNAR_f)
rownames(output_delta) <- c()
#Output
output_formatted_delta =
cbind(delta_inputs, output_delta) %>%
select(-term) %>%
mutate(across(c("estimate":"std.error"), round, 3),
#across(c("statistic":"df", "Y_mean":"Y_sd"), round, 2),
p.value = round(p.value, digits = 2))
output_formatted_delta %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, digits = 2, col.names = c("$\\delta$", "${\\widehat{\\beta}}_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"), caption = "Estimated treatment effect of treatment C using imputed data with different $\\delta$ value.")
model.ipw.coxph.1 <- geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender , data = data.comp %>% filter(day > 0) %>% mutate(day_fct = factor(day_fct,levels = c(5,19,90))), family = gaussian, id = subject_id, corstr = "independence", weights = 1/prob.stay.coxph)
model.ipw.coxph.1 <- geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender , data = data.comp %>% filter(day > 0) %>% mutate(day_fct = factor(day_fct,levels = c(5,19,90))), family = gaussian, id = subject_id, corstr = "independence", weights = 1/prob.stay.coxph)
model.ipw.coxph.1 <- geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender , data = data.comp %>% filter(day > 0) %>% mutate(day_fct = factor(day_fct,levels = c(5,19,90))), family = gaussian, id = subject_id, corstr = "independence", weights = 1/prob.stay.coxph)
source(knitr::purl("./EDA.Rmd", quiet=TRUE))
source(knitr::purl("./stat_analysis.Rmd", quiet=TRUE))
source(knitr::purl("./EDA.Rmd", quiet=TRUE))
source(knitr::purl("./stat_analysis.Rmd", quiet=TRUE))
source(knitr::purl("./EDA.Rmd", quiet=TRUE))
source(knitr::purl("./stat_analysis.Rmd", quiet=TRUE))
knitr::opts_chunk$set(echo = FALSE, message = F, warning = F)
library(visdat)
library(mice)
library(VIM)
library(lattice)
library(ggplot2)
library(miceadds)
library(formattable)
library(graphics)
include_graphics("./plots/Screenshot 2024-03-25 102531.png")
table1( ~ gender + age + mem_comp | treatment_group, data=data.baseline, render.continuous=my.render.cont, caption="Descriptive statistics of baseline characteristics of the 47 subjects by treatment groups.") %>% t1kable(booktabs = TRUE) %>%  kable_styling(latex_options = c("hold_position", "scale_down"))
traj.plot + traj.change.plot
mean.score.plot <-
data.comp %>%
group_by(subject_id) %>%
mutate(total_obs = sum(as.numeric(observed))) %>%
ungroup() %>%
mutate(type = as.factor(ifelse(total_obs == 4, "Completer", "Drop-out"))) %>%
group_by(type, day_fct, treatment_group) %>%
mutate(mean_mem_comp = mean(mem_comp,na.rm = T)) %>%
dplyr::select(day_fct, treatment_group, type, mean_mem_comp) %>%
distinct() %>%
ungroup() %>%
ggplot(aes(x = day_fct, y = mean_mem_comp, group = interaction(treatment_group, type), color = treatment_group, linetype = type)) +
geom_line(alpha = 0.8, size = 0.5) +
scale_linetype_manual(values = c("Completer" = "solid", "Drop-out" = "dashed")) +
labs(color = "Treatment Group", linetype = "Type") +
ylab("Composite memory score")+
xlab("Days of observation")+
theme_bw()+
theme(legend.position = "none")
mean.score.change.plot <-
data.comp %>%
filter(day > 0) %>%
mutate(day_fct = factor(day_fct, levels = c(5,19,90))) %>%
group_by(subject_id) %>%
mutate(total_obs = sum(as.numeric(observed))) %>%
ungroup() %>%
mutate(type = as.factor(ifelse(total_obs == 3, "Completer", "Drop-out"))) %>%
group_by(type, day_fct, treatment_group) %>%
mutate(mean_mem_comp = mean(mem_comp_delta,na.rm = T)) %>%
dplyr::select(day_fct, treatment_group, type, mean_mem_comp) %>%
distinct() %>%
ungroup() %>%
ggplot(aes(x = day_fct, y = mean_mem_comp, group = interaction(treatment_group, type), color = treatment_group, linetype = type)) +
geom_line(alpha = 0.8, size = 0.5) +
scale_linetype_manual(values = c("Completer" = "solid", "Drop-out" = "dashed")) +
labs(color = "Treatment Group", linetype = "Type") +
ylab("Change of composite memory score")+
xlab("Days of observation")+
theme_bw()
mean.score.plot + mean.score.change.plot
surv.curv <- stay.plot$plot + ylab("Proportion of stay in the study")
surv.bar <- stay.plot$ncensor.plot + ylab("Number of subjects") + theme(legend.position = "none")
surv.curv / surv.bar
tbl_merge(list(model.complete.delta.1.tbl, model.complete.delta.2.tbl, model.complete.delta.3.tbl), tab_spanner = c("Independent","AR-1","Exchangable")) %>% as_kable(booktabs = T,escape = FALSE , caption = "Coefficent estimates of the treatment effects from complete-case analysis, with different working covariance structures.") %>%  kable_styling(latex_options = c("hold_position", "scale_down")) %>% add_header_above(c(" ", "Independent" = 3, "AR-1" = 3, "Exchangable" = 3))
tbl_regression(model.prob.drop.coxph, exponentiate = T,label = list(
#day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "$95\\%$ CI", label = "Characteristics", estimate = "HR")
)  %>% as_kable(booktabs = T,escape = FALSE, caption = "Coefficent estimates of the dropout risk model.") %>%  kable_styling(latex_options = c("hold_position"))
output_formatted_delta %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, digits = 2, col.names = c("$\\delta$", "${\\widehat{\\beta}}_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"), caption = "Estimated treatment effect of treatment C using imputed data with different $\\delta$ value.")
delta_MNAR_f = function(delta){
MAR_step = mice(data.comp, m=5, method = "pmm", quickpred(data.comp, exc = "observed"), seed = 20)
MNAR_conversion_delta =
complete(MAR_step, action='long', include=TRUE) %>%
mutate(mem_comp = ifelse(observed == 0, mem_comp + delta, mem_comp))
MNAR_conversion_delta <- MNAR_conversion_delta %>%
arrange(.imp, subject_id, day) %>%
group_by(.imp, subject_id) %>%
mutate(baseline_mem_comp = first(mem_comp)) %>%
mutate(mem_comp_delta = mem_comp - baseline_mem_comp, na.rm = T)
MNAR_conversion_delta <- MNAR_conversion_delta %>% filter(day > 0)%>% mutate(day_fct = factor(day_fct, levels = c(5,19,90)))
MNAR_data_delta = as.mids(MNAR_conversion_delta)
# output_delta =
#   with(MNAR_data_delta, geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, family = gaussian, id = subject_id, corstr = "independence"))
output_delta =
with(MNAR_data_delta, geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender , family = gaussian, id = subject_id, corstr = "independence"))
params_delta =
summary(pool(output_delta)) %>%
filter(term == "treatment_groupC")
desc_delta = with(MNAR_data_delta, expr=c("Y_mean"=mean(mem_comp), "Y_sd"=stats::sd(mem_comp)))
desc_delta = withPool_MI(desc_delta) %>% as.data.frame() %>% t()
cbind(params_delta, desc_delta)
}
# Set range of plausible delta values
delta_inputs = c( -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8,0.9,1.0,1.1, 1.2, 1.5, 2, 5)
# Map output
output_delta =
map_df(delta_inputs, delta_MNAR_f)
rownames(output_delta) <- c()
#Output
output_formatted_delta =
cbind(delta_inputs, output_delta) %>%
select(-term) %>%
mutate(across(c("estimate":"std.error"), round, 3),
#across(c("statistic":"df", "Y_mean":"Y_sd"), round, 2),
p.value = round(p.value, digits = 2))
output_formatted_delta %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, digits = 2, col.names = c("$\\delta$", "${\\widehat{\\beta}}_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"), caption = "Estimated treatment effect of treatment C using imputed data with different $\\delta$ value.")
delta_MNAR_f = function(delta){
MAR_step = mice(data.comp, m=5, method = "pmm", quickpred(data.comp, exc = "observed"), seed = 20)
MNAR_conversion_delta =
complete(MAR_step, action='long', include=TRUE) %>%
mutate(mem_comp = ifelse(observed == 0, mem_comp + delta, mem_comp))
MNAR_conversion_delta <- MNAR_conversion_delta %>%
arrange(.imp, subject_id, day) %>%
group_by(.imp, subject_id) %>%
mutate(baseline_mem_comp = first(mem_comp)) %>%
mutate(mem_comp_delta = mem_comp - baseline_mem_comp, na.rm = T)
MNAR_conversion_delta <- MNAR_conversion_delta %>% filter(day > 0)%>% mutate(day_fct = factor(day_fct, levels = c(5,19,90)))
MNAR_data_delta = as.mids(MNAR_conversion_delta)
# output_delta =
#   with(MNAR_data_delta, geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, family = gaussian, id = subject_id, corstr = "independence"))
output_delta =
with(MNAR_data_delta, geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender , family = gaussian, id = subject_id, corstr = "independence"))
params_delta =
summary(pool(output_delta)) %>%
filter(term == "treatment_groupC")
desc_delta = with(MNAR_data_delta, expr=c("Y_mean"=mean(mem_comp), "Y_sd"=stats::sd(mem_comp)))
desc_delta = withPool_MI(desc_delta) %>% as.data.frame() %>% t()
cbind(params_delta, desc_delta)
}
# Set range of plausible delta values
delta_inputs = c(-0.3, -0.2,-0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8,0.9,1.0,1.1, 1.2, 1.5, 2, 5)
# Map output
output_delta =
map_df(delta_inputs, delta_MNAR_f)
rownames(output_delta) <- c()
#Output
output_formatted_delta =
cbind(delta_inputs, output_delta) %>%
select(-term) %>%
mutate(across(c("estimate":"std.error"), round, 3),
#across(c("statistic":"df", "Y_mean":"Y_sd"), round, 2),
p.value = round(p.value, digits = 2))
output_formatted_delta %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, digits = 2, col.names = c("$\\delta$", "${\\widehat{\\beta}}_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"), caption = "Estimated treatment effect of treatment C using imputed data with different $\\delta$ value.")
# Set range of plausible delta values
delta_inputs = c(-0.3, -0.2,-0.1, 0, 0.1, 0.5,
0.8, 1.2, 1.5, 2)
delta_MNAR_f = function(delta){
MAR_step = mice(data.comp, m=5, method = "pmm", quickpred(data.comp, exc = "observed"), seed = 20)
MNAR_conversion_delta =
complete(MAR_step, action='long', include=TRUE) %>%
mutate(mem_comp = ifelse(observed == 0, mem_comp + delta, mem_comp))
MNAR_conversion_delta <- MNAR_conversion_delta %>%
arrange(.imp, subject_id, day) %>%
group_by(.imp, subject_id) %>%
mutate(baseline_mem_comp = first(mem_comp)) %>%
mutate(mem_comp_delta = mem_comp - baseline_mem_comp, na.rm = T)
MNAR_conversion_delta <- MNAR_conversion_delta %>% filter(day > 0)%>% mutate(day_fct = factor(day_fct, levels = c(5,19,90)))
MNAR_data_delta = as.mids(MNAR_conversion_delta)
# output_delta =
#   with(MNAR_data_delta, geeglm(mem_comp ~ day_fct + treatment_group + age + gender + treatment_group * day_fct, family = gaussian, id = subject_id, corstr = "independence"))
output_delta =
with(MNAR_data_delta, geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender , family = gaussian, id = subject_id, corstr = "independence"))
params_delta =
summary(pool(output_delta)) %>%
filter(term == "treatment_groupC")
desc_delta = with(MNAR_data_delta, expr=c("Y_mean"=mean(mem_comp), "Y_sd"=stats::sd(mem_comp)))
desc_delta = withPool_MI(desc_delta) %>% as.data.frame() %>% t()
cbind(params_delta, desc_delta)
}
# Set range of plausible delta values
delta_inputs = seq(-2,2,by = 0.3)
# Map output
output_delta =
map_df(delta_inputs, delta_MNAR_f)
rownames(output_delta) <- c()
#Output
output_formatted_delta =
cbind(delta_inputs, output_delta) %>%
select(-term) %>%
mutate(across(c("estimate":"std.error"), round, 3),
#across(c("statistic":"df", "Y_mean":"Y_sd"), round, 2),
p.value = round(p.value, digits = 2))
output_formatted_delta %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, digits = 2, col.names = c("$\\delta$", "${\\widehat{\\beta}}_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"), caption = "Estimated treatment effect of treatment C using imputed data with different $\\delta$ value.")
output_formatted_delta %>%
dplyr::select(delta_inputs, estimate, std.error, p.value, Y_mean, Y_sd) %>%
knitr::kable(booktabs = T, escape = F, digits = 2, col.names = c("$\\delta$", "${\\widehat{\\beta}}_4$", "SD", "p-value", "Mean of outcome (after imputation)", "SD of outcome (after imputation)"), caption = "Estimated treatment effect of treatment C using imputed data with different $\\delta$ value.")
data.imp <- complete(imp, "long", inc = TRUE)
## Graph
imp <- mice(data.comp, m = 5)
?mice
tbl_merge(list(model.ipw.coxph.1.tbl, model.ipw.coxph.2.tbl, model.ipw.coxph.3.tbl), tab_spanner = c("Independent","AR-1","Exchangable")) %>% as_kable(booktabs = T, escape = FALSE) %>%  kable_styling(latex_options = c("hold_position", "scale_down")) %>% add_header_above(c(" ", "Independent" = 3, "AR-1" = 3, "Exchangable" = 3))
model.complete.delta.1 <- geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender , data = data.comp %>% filter(type=="Completer", day > 0) %>% mutate(day_fct = factor(day_fct, levels = c(5,19,90))), family = gaussian, id = subject_id, corstr = "independence")
model.complete.delta.2 <- geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender , data = data.comp %>% filter(type=="Completer", day > 0) %>% mutate(day_fct = factor(day_fct, levels = c(5,19,90))), family = gaussian, id = subject_id,  corstr = "ar1")
model.complete.delta.3 <- geeglm(mem_comp_delta ~ day_fct + treatment_group + age + gender, data = data.comp %>% filter(type=="Completer", day > 0) %>% mutate(day_fct = factor(day_fct, levels = c(5,19,90))), family = gaussian, id = subject_id, corstr = "exchangeable")
model.complete.delta.1.tbl <- tbl_regression(model.complete.delta.1,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender"
#`day_fct:treatment_group` ~ "Days*Treatment"
)) %>% modify_header(list(p.value = "p-value", ci = "$95\\%$ CI", label = "Characteristics", estimate = "$\\widehat\\beta$"))
model.complete.delta.2.tbl <- tbl_regression(model.complete.delta.2,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender"
#`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "$95\\%$ CI", label = "Characteristics", estimate = "$\\widehat\\beta$")
)
model.complete.delta.3.tbl <- tbl_regression(model.complete.delta.3,label = list(
day_fct ~ "Days",
treatment_group ~ "Treatment",
age ~ "Age",
gender ~ "Gender"
#`day_fct:treatment_group` ~ "Days*Treatment"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "$95\\%$ CI", label = "Characteristics", estimate = "$\\widehat\\beta$")
)
model.complete.delta.tbl <-
tbl_merge(list(model.complete.delta.1.tbl, model.complete.delta.2.tbl, model.complete.delta.3.tbl), tab_spanner = c("Independent","AR-1","Exchangable")) %>% as_kable(booktabs = T, format = "latex",escape = FALSE) %>%  kable_styling(latex_options = c("hold_position")) %>% add_header_above(c(" ", "Independent" = 3, "AR-1" = 3, "Exchangable" = 3))
model.complete.delta.tbl
writeLines(as.character(model.complete.delta.tbl), "complete_case_gee_delta.tex")
table1( ~ gender + age + mem_comp | treatment_group, data=data.baseline, render.continuous=my.render.cont, caption="Descriptive statistics of baseline characteristics of the 47 subjects by treatment groups.") %>% t1kable(booktabs = TRUE) %>%  kable_styling(latex_options = c("hold_position", "scale_down"))
tbl_merge(list(model.complete.delta.1.tbl, model.complete.delta.2.tbl, model.complete.delta.3.tbl), tab_spanner = c("Independent","AR-1","Exchangable")) %>% as_kable(booktabs = T,escape = FALSE , caption = "Coefficent estimates of the treatment effects from complete-case analysis, with different working covariance structures.") %>%  kable_styling(latex_options = c("hold_position", "scale_down")) %>% add_header_above(c(" ", "Independent" = 3, "AR-1" = 3, "Exchangable" = 3))
model.complete.tbl
tbl_regression(model.drop, exponentiate = F)
model.drop <-
geeglm(just_dropped ~ day_fct + treatment_group + age + gender + mem_comp_lag, data = data.comp.lag, family = binomial, id = subject_id, corstr = "independence")
tbl_regression(model.drop, exponentiate = F)
data.comp.lag <-
data.comp.lag %>%
group_by(subject_id) %>%
mutate(just_dropped = ifelse((drop == 1 & lag(drop) == 0) | (drop == 1 & is.na(lag(drop))) , 1, 0)) %>%
ungroup()
model.drop <-
geeglm(just_dropped ~ day_fct + treatment_group + age + gender, data = data.comp.lag, family = binomial, id = subject_id, corstr = "independence")
tbl_regression(model.drop, exponentiate = F)
model.drop <-
geeglm(just_dropped ~ day_fct + treatment_group + age + gender, data = data.comp.lag, family = binomial, id = subject_id, corstr = "independence")
tbl_regression(model.drop, exponentiate = F)
tbl_regression(model.drop, exponentiate = T,label = list(
day_fct ~ "Days",
age ~ "Age",
gender ~ "Gender"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "OR")
)  %>% as_kable(booktabs = T, ,escape = FALSE) %>%  kable_styling(latex_options = c("hold_position"))
tbl_regression(model.drop, exponentiate = T,label = list(
day_fct ~ "Days",
age ~ "Age",
gender ~ "Gender"
)) %>%
modify_header(
update = list(p.value = "p-value", ci = "95% CI", label = "Characteristics", estimate = "OR")
)  %>% as_kable(booktabs = T ,escape = FALSE) %>%  kable_styling(latex_options = c("hold_position"))
